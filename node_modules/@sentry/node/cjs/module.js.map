{"version":3,"file":"module.js","sources":["../../src/module.ts"],"sourcesContent":["import { posix, sep } from 'path';\n\nconst isWindowsPlatform = sep === '\\\\';\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path: string): string {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/'); // replace all `\\` instances with `/`\n}\n\n/** Gets the module from a filename */\nexport function getModuleFromFilename(\n  filename: string | undefined,\n  normalizeWindowsPathSeparator: boolean = isWindowsPlatform,\n): string | undefined {\n  if (!filename) {\n    return;\n  }\n\n  const normalizedFilename = normalizeWindowsPathSeparator ? normalizeWindowsPath(filename) : filename;\n\n  // eslint-disable-next-line prefer-const\n  let { root, dir, base: basename, ext } = posix.parse(normalizedFilename);\n\n  const base = (require && require.main && require.main.filename && dir) || global.process.cwd();\n\n  const normalizedBase = `${base}/`;\n\n  // It's specifically a module\n  let file = basename;\n\n  if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n    file = file.slice(0, ext.length * -1);\n  }\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    dir = '.';\n  }\n\n  let n = dir.lastIndexOf('/node_modules/');\n  if (n > -1) {\n    // /node_modules/ is 14 chars\n    return `${dir.slice(n + 14).replace(/\\//g, '.')}:${file}`;\n  }\n  // Let's see if it's a part of the main module\n  // To be a part of main module, it has to share the same base\n  n = `${dir}/`.lastIndexOf(normalizedBase, 0);\n\n  if (n === 0) {\n    let moduleName = dir.slice(normalizedBase.length).replace(/\\//g, '.');\n    if (moduleName) {\n      moduleName += ':';\n    }\n    moduleName += file;\n    return moduleName;\n  }\n  return file;\n}\n"],"names":["sep","posix"],"mappings":";;;;AAEA,MAAM,iBAAkB,GAAEA,QAAI,KAAI,IAAI,CAAA;AACtC;AACA;AACA,SAAS,oBAAoB,CAAC,IAAI,EAAkB;AACpD,EAAE,OAAO,IAAA;AACT,KAAK,OAAO,CAAC,SAAS,EAAE,EAAE,CAAA;AAC1B,KAAK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;AACxB,CAAA;AACA;AACA;AACO,SAAS,qBAAqB;AACrC,EAAE,QAAQ;AACV,EAAE,6BAA6B,GAAY,iBAAiB;AAC5D,EAAsB;AACtB,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAM;AACV,GAAE;AACF;AACA,EAAE,MAAM,kBAAmB,GAAE,6BAA8B,GAAE,oBAAoB,CAAC,QAAQ,CAAE,GAAE,QAAQ,CAAA;AACtG;AACA;AACA,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAA,KAAQC,UAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;AAC1E;AACA,EAAE,MAAM,IAAK,GAAE,CAAC,OAAA,IAAW,OAAO,CAAC,IAAK,IAAG,OAAO,CAAC,IAAI,CAAC,QAAA,IAAY,GAAG,KAAK,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAA;AAChG;AACA,EAAE,MAAM,cAAA,GAAiB,CAAC,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA,EAAA,IAAA,IAAA,GAAA,QAAA,CAAA;AACA;AACA,EAAA,IAAA,GAAA,KAAA,KAAA,IAAA,GAAA,KAAA,MAAA,IAAA,GAAA,KAAA,MAAA,EAAA;AACA,IAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,CAAA,IAAA,IAAA,CAAA,GAAA,EAAA;AACA;AACA,IAAA,GAAA,GAAA,GAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,CAAA,GAAA,GAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,CAAA;AACA,EAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA;AACA;AACA,IAAA,OAAA,CAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,OAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA;AACA,EAAA,CAAA,GAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,cAAA,EAAA,CAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,IAAA,IAAA,UAAA,GAAA,GAAA,CAAA,KAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAAA,OAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;AACA,IAAA,IAAA,UAAA,EAAA;AACA,MAAA,UAAA,IAAA,GAAA,CAAA;AACA,KAAA;AACA,IAAA,UAAA,IAAA,IAAA,CAAA;AACA,IAAA,OAAA,UAAA,CAAA;AACA,GAAA;AACA,EAAA,OAAA,IAAA,CAAA;AACA;;;;"}